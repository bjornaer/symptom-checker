// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/bjornaer/sympton-checker/ent/ailment"
	"github.com/bjornaer/sympton-checker/ent/schema"
	"github.com/bjornaer/sympton-checker/ent/symptom"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	ailmentFields := schema.Ailment{}.Fields()
	_ = ailmentFields
	// ailmentDescName is the schema descriptor for name field.
	ailmentDescName := ailmentFields[1].Descriptor()
	// ailment.DefaultName holds the default value on creation for the name field.
	ailment.DefaultName = ailmentDescName.Default.(string)
	// ailmentDescSymptoms is the schema descriptor for symptoms field.
	ailmentDescSymptoms := ailmentFields[2].Descriptor()
	// ailment.DefaultSymptoms holds the default value on creation for the symptoms field.
	ailment.DefaultSymptoms = ailmentDescSymptoms.Default.(map[string]schema.SymptomDetails)
	// ailmentDescHpos is the schema descriptor for hpos field.
	ailmentDescHpos := ailmentFields[3].Descriptor()
	// ailment.DefaultHpos holds the default value on creation for the hpos field.
	ailment.DefaultHpos = ailmentDescHpos.Default.([]string)
	// ailmentDescID is the schema descriptor for id field.
	ailmentDescID := ailmentFields[0].Descriptor()
	// ailment.IDValidator is a validator for the "id" field. It is called by the builders before save.
	ailment.IDValidator = ailmentDescID.Validators[0].(func(int) error)
	symptomFields := schema.Symptom{}.Fields()
	_ = symptomFields
	// symptomDescName is the schema descriptor for name field.
	symptomDescName := symptomFields[0].Descriptor()
	// symptom.DefaultName holds the default value on creation for the name field.
	symptom.DefaultName = symptomDescName.Default.(string)
	// symptomDescHpo is the schema descriptor for hpo field.
	symptomDescHpo := symptomFields[1].Descriptor()
	// symptom.HpoValidator is a validator for the "hpo" field. It is called by the builders before save.
	symptom.HpoValidator = symptomDescHpo.Validators[0].(func(string) error)
}
